@using Microsoft.AspNet.Identity
@using WebApplication4.Models

@model PuntoVentaModel
@{
    var db = new WebApplication4.Models.inf245netsoft();
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    //se obtiene el punto guardado en el session
    PuntoVenta punto = (PuntoVenta)Session["punto"];
    //se define un puntoVentaModel y se le asignan los datos del punto de venta guardado
    PuntoVentaModel puntoM = new PuntoVentaModel();
    int idR = 0;
    int idP = 0;
    puntoM.mac = punto.dirMAC;
    idR = (int)punto.idRegion;
    idP = (int)punto.idProvincia;
    puntoM.nombre = punto.nombre;
    puntoM.ubicacion = punto.ubicacion;
    puntoM.idRegion = (int)punto.idRegion;
    puntoM.idProv = (int)punto.idProvincia;
    //se le asignan los valores del puntoVentaModel a los campos que se editaran
}

<div class="container-fluid">
    <div class="col-md-5">
        <ol class="breadcrumb">
            <li><a href="@Url.Action("Index","PuntoVenta")">Mantenimiento de Puntos de Venta</a></li>
            <li class="active">Editar Punto de Venta</li>
        </ol>
    </div>
</div>

<div class="container">
    @using (Html.BeginForm("EditRegister", "PuntoVenta", FormMethod.Post, new { model = puntoM }))
    {
        @Html.AntiForgeryToken()
        <div class="col-md-8 col-md-offset-2">
            <div class="form-horizontal">
                @Html.ValidationSummary(true)
                <br>
                <div class="row form-group">
                    @Html.LabelFor(model => model.nombre, new { @class = "control-label col-md-3" })
                    <div class="col-md-5">
                        @Html.TextBoxFor(model => model.nombre, new { @class = "form-control", @placeholder = @puntoM.nombre, @Value = @puntoM.nombre })
                        @Html.ValidationMessageFor(model => model.nombre)
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(model => model.ubicacion, new { @class = "control-label col-md-3" })
                    <div class="col-md-5">
                        @Html.TextBoxFor(model => model.ubicacion, new { @class = "form-control", @placeholder = @puntoM.ubicacion, @Value = @puntoM.ubicacion })
                        @Html.ValidationMessageFor(model => model.ubicacion)
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(model => model.mac, new { @class = "control-label col-md-3" })
                    <div class="col-md-5">
                        @Html.TextBoxFor(model => model.mac, new { @class = "form-control", @placeholder = @puntoM.mac, @Value = @puntoM.mac })
                        @Html.ValidationMessageFor(model => model.mac)
                    </div>
                </div>


                <div class="row form-group">
                    @Html.LabelFor(model => model.idRegion, new { @class = "control-label col-md-3" })
                    <div class="col-md-5">
                        @Html.DropDownListFor(model => model.idRegion, @ViewBag.DepID as SelectList, "Departamento", new { @class = "form-control", @onchange = "cambioDepartamento()" })
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(model => model.idProv, new { @class = "control-label col-md-3" })
                    <div class="col-md-5">
                        @Html.DropDownListFor(model => model.idProv, @ViewBag.ProvID as SelectList, "Provincia", new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <center>
                        <button type="submit" value="Editar" class="btn btn-primary"><span class="glyphicon glyphicon-save"></span> Guardar</button>
                        <a href="@Url.Action("Index","PuntoVenta")" class="btn btn-danger"><span class="glyphicon glyphicon-remove"></span> Cancelar</a>
                    </center>
                </div>
            </div>
        </div>
        
        
    }
</div>


<input type="hidden" id="idRegT" value="@idR" />
<input type="hidden" id="idProvT" value="@idP" />

<script>
    function cambioDepartamento() {
        //se define la funcion que llenara las provincias en funcion de la region seleccionada
        var depId = parseInt($("#idRegion").val());
        if (!isNaN(depId)) {
            var ddProv = $("#idProv");
            ddProv.empty();
            ddProv.append($("<option></option>").val("").html("Provincia"));
            $.ajax({
                url: "@Url.Action("Provincia","Services")",
                data: { depId: depId },
                datatype: "json",
                success: function (data) {
                    var obj = $.parseJSON(data);
                    $.each(obj, function (k, v) {
                        ddProv.append($("<option></option>").val(v.IdRegion).html(v.Nombre));
                    });
                },
                error: function () {
                    alert("Error :(");
                }
            });
        }
        ddProv.empty();
    }
</script>
