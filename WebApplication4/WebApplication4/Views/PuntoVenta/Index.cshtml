@using Microsoft.AspNet.Identity
@using WebApplication4.Models

@model PuntoVentaModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var db = new WebApplication4.Models.inf245netsoft();
    //se carga la lista de regiones para realizar la busqueda
    List<WebApplication4.Models.Region> listaSearch = db.Region.AsNoTracking().Where(c => c.idRegPadre == null).ToList();
}
<style>
    td {
        text-align: center;
    }
</style>
<div class="container-fluid">
    <div class="col-md-5">
        <ol class="breadcrumb">
            <li class="active">Mantenimiento de Puntos de Venta</li>
        </ol>
    </div>
</div>
<div class="container">
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <a class="btn btn-success" href="#formNuevo" data-toggle="modal"><span class="glyphicon glyphicon-plus"></span> Nuevo</a>
                <a class="btn btn-primary" data-toggle="modal" onclick="redirige()"><span class="glyphicon glyphicon-pencil"></span> Modificar</a>
                <a class="btn btn-danger" onclick="validaS()" data-toggle="modal"><span class="glyphicon glyphicon-trash"></span> Eliminar</a>
                <a class="btn btn-default" onclick="activa()" data-toggle="modal" id="Activate"><span class="glyphicon glyphicon-ok"></span> Activar</a>
                <a class="btn btn-default" id="idBusq2" onclick="buscaI()" data-toggle="modal"><span class="glyphicon glyphicon-eye-open"></span> Inactivos</a>
            </div>
        </div>

        <div class="col-md-3">
            <form action="" class="" role="search">
                <div class="form-group">
                    <div class="input-group">
                        <input id="idBusq" type="text" class="form-control" placeholder="UBICACION DEL PTO VENTA">
                        <span class="input-group-btn"><button onclick="busca()" class="btn btn-primary" type="button"><span class="glyphicon glyphicon-search"></span></button></span>
                    </div>
                </div>
            </form>
        </div>
        <div class="col-md-3">
            <select class="form-control" name="" id="comboBusq" onchange="busca2()">
                <option>Departamento</option>
                <option value="0">Todos</option>
                @foreach (var item in listaSearch)
                {
                    <option value="@item.idRegion">
                        @item.nombre
                    </option>
                }
            </select>
        </div>
    </div>
    <br>
    @{
        //se obtine la lista de puntos de venta activos
        List<WebApplication4.Models.PuntoVenta> listaPunto = db.PuntoVenta.AsNoTracking().Where(c => c.estaActivo == true).ToList();
        //si se realizo la busqueda se le asigna a la lista de puntos de venta el resultado de la busqueda
        if (Session["ListaP"] == null)
        {
            listaPunto = db.PuntoVenta.AsNoTracking().Where(c => c.estaActivo == true).ToList();
        }
        else
        {
            listaPunto = (List<WebApplication4.Models.PuntoVenta>)Session["ListaP"];
        }
    }

    <div class="row">
        <div class="table-responsive">
            <table id="mytable" class="table table-bordered table-hover">
                <thead>
                    <tr class="thead">
                        <th class="col-md-1">Código</th>
                        <th class="col-md-2">Nombre</th>
                        <th class="col-md-3">Ubicación</th>
                        <th class="col-md-1">Dirección MAC</th>
                        <th class="col-md-2">Provincia</th>
                        <th class="col-md-2">Departamento</thclass>
                        <th class="col-md-1">Estado</th>
                    </tr>
                </thead>
                <tbody id="tbody">
                    @foreach (var row in listaPunto)
                    {
                        //se muestra la lista de puntos de venta activos o como resultado de una busqueda
                        <tr id=@row.codPuntoVenta onclick="myFunction(this)">
                            <td>@row.codPuntoVenta</td>
                            <td>@row.nombre</td>
                            <td>@row.ubicacion</td>
                            <td>@row.dirMAC</td>
                            <td>@db.Region.Find(row.idProvincia).nombre</td>
                            <td>@db.Region.Find(row.idRegion).nombre</td>
                            @{
                        string state = "";
                        if (row.estaActivo.HasValue)
                        {
                            if ((bool)row.estaActivo)
                            { state = "Activo"; }
                            else { state = "Inactivo"; }
                        }
                            }
                            <td>@state</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

    </div>

</div>

<input type="hidden" id="idPuntoT" value="" />
<input type="hidden" id="EstadoPT" value="" />

<script>
    function myFunction(x) {
        if (document.getElementsByClassName("trselected").length > 0) {
            var element = document.getElementsByClassName("trselected");
            element[0].className = "";
        }
        var elem = document.getElementById("idPuntoT");
        elem.value = x.cells[0].innerHTML;
        var elem2 = document.getElementById("EstadoPT");
        elem2.value = x.cells[6].innerHTML;
        x.className = "trselected";
    }
    function borrar() {
        var punto = $('#idPuntoT').val();
        var estado = $('#EstadoPT').val();
        var el = document.getElementById(punto);
        var row = $(el).closest('tr');
        //se obtiene los datos de la fila de la lista seleccionado
        //se comprueba si punto esta activo y se le envia los datos al controller
        if (punto != "" && punto != null) {
            if (estado != "Inactivo") {
                $.ajax({
                    url: "@Url.Action("Delete","PuntoVenta")",
                    data: { punto: punto },
                    success: function (data) {
                        alert(data);
                        $('#eliminar').modal('hide');
                        //row.remove();
                        window.location.href = '/PuntoVenta/Index';
                    },
                    error: function (data) {
                        alert(data);
                    }
                });
            } else {
                alert("No se puede desactivar un Punto de Venta que ya esta desactivado");
            }
        } else {
            alert("Seleccione un Punto de Venta");
            evento = "";
        }
    }
    function activa() {
        var punto = $('#idPuntoT').val();
        var estado = $('#EstadoPT').val();
        var el = document.getElementById(punto);
        var row = $(el).closest('tr');
        //se obtiene los datos de la fila de la lista seleccionado
        //se comprueba si punto esta desactivado y se le envia los datos al controller
        if (punto != "" && punto != null) {
            if (estado != "Activo") {
                $.ajax({
                    url: "@Url.Action("Active","PuntoVenta")",
                    data: { punto: punto },
                    success: function (data) {
                        alert(data);
                        window.location.href = '/PuntoVenta/Index';
                    },
                    error: function (data) {
                        alert(data);
                    }
                });
            } else {
                alert("No se puede activar un Punto de Venta que ya esta activado");
            }
        } else {
            alert("Seleccione un Punto de Venta");
            evento = "";
        }
    }
    function redirige() {
        var punto = $('#idPuntoT').val();
        var estado = $('#EstadoPT').val();
        //se obtiene los datos de la fila de la lista seleccionado
        //se comprueba si punto esta activado y se le redirige a la ventana de edicion
        if (punto != "") {
            if (estado != "Inactivo") {
                var elem = document.getElementById("idPuntoT");
                elem.value = "";
                window.location.href = '/PuntoVenta/Edit?punto=' + punto;
            } else {
                alert("El Punto de Venta esta desactivado no se puede editar");
            }
        } else {
            alert("Seleccione un Punto de Venta");
            evento = "";
        }
    }
    function busca() {
        var punto = $('#idBusq').val();
        //se saca el campo ingresado en el criterio de busqueda y se envia al controller
        $.ajax({
            url: "@Url.Action("Search2", "PuntoVenta")",
            data: { punto: punto },
            success: function (data) {
                window.location.href = '/PuntoVenta/Index';
            },
            error: function () {
                alert("Error :(");
            }
        });
    }
    function busca2() {
        var region = $('#comboBusq option:selected').val();
        //se saca el campo ingresado en el criterio de busqueda y se envia al controller
        $.ajax({
            url: "@Url.Action("Search3", "PuntoVenta")",
            data: { region: region },
            success: function (data) {
                window.location.href = '/PuntoVenta/Index';
            },
            error: function () {
                alert("Error :(");
            }
        });
    }
    function buscaI() {
        //se llama al controller para que busque puntos de venta inactivo
        $.ajax({
            url: "@Url.Action("SearchI", "PuntoVenta")",
            data: {},
            success: function (data) {
                window.location.href = '/PuntoVenta/Index';
            },
            error: function () {
                alert("Error :(");
            }
        });
    }
    function validaS() {
        //se comprueba que se halla seleccionado una venta
        var cliente = $('#idPuntoT').val();
        if (cliente != null && cliente != "") {
            $('#eliminar').modal('show');
        } else {
            alert("Seleccione un punto de Venta");
        }
    }
    function cambioDepartamento() {
        //se define la funcion que llenara las provincias en funcion de la region seleccionada
        var depId = parseInt($("#idRegion").val());
        if (!isNaN(depId)) {
            var ddProv = $("#idProv");
            ddProv.empty();
            ddProv.append($("<option></option>").val("").html("Provincia"));
            $.ajax({
                url: "@Url.Action("Provincia","Services")",
                data: { depId: depId },
                datatype: "json",
                success: function (data) {
                    var obj = $.parseJSON(data);
                    $.each(obj, function (k, v) {
                        ddProv.append($("<option></option>").val(v.IdRegion).html(v.Nombre));
                    });
                },
                error: function () {
                    alert("Error :(");
                }
            });
        }
        ddProv.empty();
    }
    function closewindow() {
        $('#eliminar').modal('hide');
    }
</script>



<div class="modal fade" id="formNuevo">
    <!--esta div pondra la pantalla oscura al presionar el boton-->
    <div class="modal-dialog">
        <div class="modal-content">
            <!--ACA VA EL CONTENIDO DEL MODAL-->
            <!--header de la ventana-->
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times; </button>
                <h4 class="modal-title">Nuevo Punto de Venta</h4>
            </div>
            <!--contenido de la ventana-->

            <div class="modal-body">
                @using (Html.BeginForm("RegisterPunto", "PuntoVenta", FormMethod.Post, new { }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true)
                        <br>
                        <div class="row form-group">
                            @Html.LabelFor(model => model.nombre, new { @class = "control-label col-md-3" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.nombre)
                            </div>
                        </div>

                        <div class="row form-group">
                            @Html.LabelFor(model => model.ubicacion, new { @class = "control-label col-md-3" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.ubicacion, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ubicacion)
                            </div>
                        </div>

                        <div class="row form-group">
                            @Html.LabelFor(model => model.mac, new { @class = "control-label col-md-3" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.mac, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.mac)
                            </div>
                        </div>

                        <div class="row form-group">
                            @Html.LabelFor(model => model.idRegion, new { @class = "control-label col-md-3" })
                            <div class="col-md-4">
                                @Html.DropDownListFor(model => model.idRegion, @ViewBag.DepID as SelectList, "Departamento", new { @class = "form-control", @onchange = "cambioDepartamento()" })
                            </div>
                        </div>

                        <div class="row form-group">
                            @Html.LabelFor(model => model.idProv, new { @class = "control-label col-md-3" })
                            <div class="col-md-4">
                                @Html.DropDownListFor(model => model.idProv, @ViewBag.ProvID as SelectList, "Provincia", new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Agregar" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                }
            </div>

            <!--footer de la ventana-->
        </div>
    </div>
</div>

<div class="modal fade" id="eliminar">
    <!--esta div pondra la pantalla oscura al presionar el boton-->
    <div class="modal-dialog">
        <div class="modal-content">
            <!--ACA VA EL CONTENIDO DEL MODAL-->
            <!--header de la ventana-->
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times; </button>
                <h4 class="modal-title">Aviso</h4>
            </div>
            <!--contenido de la ventana-->
            <div class="modal-body">
                ¿Está seguro que quiere dar de baja el registro se borraran tambien los turnos asignados a este punto de venta?
            </div>
            <!--footer de la ventana-->
            <div class="modal-footer">
                <button type="button" onclick="borrar()" class="btn btn-primary">Aceptar <span class="glyphicon glyphicon-ok"></span></button>
                <button type="button" onclick="return closewindow();" class="btn btn-danger">Cancelar <span class="glyphicon glyphicon-remove"></span></button>
            </div>
        </div>
    </div>
</div>



