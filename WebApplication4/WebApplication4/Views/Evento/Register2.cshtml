@using Microsoft.AspNet.Identity;
@using WebApplication4.Models;

@model RegistarEventoModel

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_LayoutPersonal.cshtml";
    var db = new inf245netsoft();
}
<div class="container-fluid">
    <div class="col-md-5">
        <ol class="breadcrumb">
            <li><a href="@Url.Action("Index","Evento")">Mantenimiento de eventos</a></li>
            <li class="active">Nuevo evento</li>
        </ol>
    </div>
</div>
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <a href="@Url.Action("Index","Evento")" class="btn btn-danger pull-right"><span class="glyphicon glyphicon-hand-left"></span> Regresar</a>
        </div>
    </div>

    <form action="" method="post" enctype="multipart/form-data">
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <!--DECLARAMOS EL TABS Y LA CANTIDAD DE PESTAÑAS QUE TENDRA -->
        <ul class="nav nav-tabs">
            <li id="tab_1" class="active"><a href="#generales" data-toggle="tab">Datos Generales</a></li>
            <li id="tab_2"><a href="#bloques_tiempo" data-toggle="tab">Bloques de tiempo de venta</a></li>
            <li id="tab_3"><a href="#funciones" data-toggle="tab">Funciones</a></li>
            <li id="tab_4"><a href="#tarifas" data-toggle="tab">Tarifas</a></li>
            <li id="tab_6"><a href="#extras" data-toggle="tab">Extras</a></li>
        </ul>


        <!--INTRODUCIMOS EL CONTIDO QUE TENDRA CADA PESTAÑA -->
        <div class="tab-content">
            <!--PRIMERA PESTAÑA-->
            @using (Html.BeginForm("", "", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="tab-pane active  fade in  container" id="generales">
                    @Html.ValidationSummary(true)
                    <br>
                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.LabelFor(m => m.DatosGeneralesModel.nombre, new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(m => m.DatosGeneralesModel.nombre, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DatosGeneralesModel.nombre)
                            </div>
                        </div><br><br>
                        <div class="form-group">
                            @Html.LabelFor(c => c.DatosGeneralesModel.idOrganizador, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="input-group">
                                    @Html.TextBoxFor(c => c.DatosGeneralesModel.idOrganizador, new { @class = "form-control", @readonly = true, @id = "organizadorNombre" })
                                    <span class="input-group-btn"><a href="#modalBuscarOrganizador" class="btn btn-primary" data-toggle="modal" type="button">Buscar <span class="glyphicon glyphicon-search"></span></a></span>
                                </div>

                            </div>
                        </div><br><br>
                        <div class="form-group">
                            @Html.LabelFor(c => c.DatosGeneralesModel.idCategoria, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(c => c.DatosGeneralesModel.idCategoria, @ViewBag.CatID as SelectList, "Categoria", new { @class = "form-control", @onchange = "cambioCategoria()" })
                            </div>
                        </div><br><br>
                        <div class="form-group">
                            @Html.LabelFor(c => c.DatosGeneralesModel.idSubCat, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(c => c.DatosGeneralesModel.idSubCat, @ViewBag.SubID as SelectList, "Subcategoria", new { @class = "form-control" })
                            </div>
                        </div><br><br>

                        <div class="form-group">
                            @Html.LabelFor(c => c.DatosGeneralesModel.idLocal, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="input-group">
                                    @Html.TextBoxFor(c => c.DatosGeneralesModel.idLocal, new { @class = "form-control", @readonly = true, @id = "localNombre" })
                                    <span class="input-group-btn"><a href="#modalBuscarLocal" class="btn btn-primary" data-toggle="modal" type="button">Buscar <span class="glyphicon glyphicon-search"></span></a></span>
                                </div>
                            </div>
                        </div><br><br>

                        <div class="form-group">
                            @Html.LabelFor(c => c.DatosGeneralesModel.Direccion, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(c => c.DatosGeneralesModel.Direccion, new { @class = "form-control", @placeholder = "Solo si no existe local para el evento" })
                            </div>
                        </div><br><br>
                        <div class="form-group">
                            @Html.LabelFor(model => model.DatosGeneralesModel.idRegion, new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownListFor(model => model.DatosGeneralesModel.idRegion, @ViewBag.DepID as SelectList, "Departamento", new { @class = "form-control", @onchange = "cambioDepartamento()" })
                            </div>
                            @Html.LabelFor(model => model.DatosGeneralesModel.idProv, new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownListFor(model => model.DatosGeneralesModel.idProv, @ViewBag.ProvID as SelectList, "Provincia", new { @class = "form-control" })
                            </div>
                        </div><br><br>
                        <div class="form-group">
                            @Html.LabelFor(c => c.DatosGeneralesModel.descripcion, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(c => c.DatosGeneralesModel.descripcion, new { @class = "form-control", @rows = 8 })
                            </div>
                        </div>
                    </div>
                </div>
                <button type="submit" class="btn btn-primary">Siguiente<span class="glyphicon-arrow-right"></span></button>
            }
            <br /><br />
            <!--SEGUNDA PESTAÑA-->
            <div class="tab-pane fade in container" id="bloques_tiempo">
                <br>
                <div class="col-md-4">
                    <div class="form-group">
                        <button id="btnAgregarBloque" type="button" class="btn btn-primary" onclick="nuevoBloque()">Añadir bloque <span class="glyphicon glyphicon-plus"></span></button>
                        <button id="btnQuitarBloque" type="button" class="btn btn-primary" onclick="quitarBloque()">Quitar bloque <span class="glyphicon glyphicon-remove"></span></button>
                    </div>
                </div>

                <div id="bloques" class="container">
                    <div class="col-md-2">
                        <label for="">Bloque de tiempo:</label>
                    </div>
                    @Html.Hidden("histBloque", "0")
                    <table class="table table-bordered table-hover" id="bloqueDeTiempo">
                        <tshead>
                            <tr class="thead">
                                <td>Desde: </td>
                                <td>Hasta: </td>
                                <td>¿Quitar?</td>
                            </tr>
                        </tshead>
                        <tbody></tbody>
                    </table><br>
                </div>
            </div>
            <!--TERCERA PESTAÑA-->

            <div class="tab-pane fade in container" id="funciones">
                @Html.Hidden("histFuncion", "0")
                <br>
                <div>
                    <button id="btnAgregarFuncion" type="button" class="btn btn-primary" onclick="agregaFuncion()">Agregar función <span class="glyphicon glyphicon-plus"></span></button>
                    <button id="btnAgregarFuncion" type="button" class="btn btn-primary" onclick="eliminarFuncion()">Quitar función <span class="glyphicon glyphicon-remove"></span></button>
                </div><br /><br />
                <div id="funciones" class="container">
                </div>
            </div>
            <!--CUARTA PESTAÑA-->
            <div class="tab-pane fade in container" id="tarifas">
                <div class="container">
                    <br>
                    <div class="row">
                        <div class="col-md-3 col-md-offset-9">
                            <button class="btn btn-primary" type="button" onclick="agregarFila()">Agregar fila <span class="glyphicon glyphicon-plus"></span></button>
                            <button class="btn btn-primary ">Quitar fila <span class="glyphicon glyphicon-remove"></span></button>
                        </div>
                    </div><br>
                    <div class="row">
                        <table class="table table-bordered table-hover" id="tarifaTabla">
                            <thsead>
                                <tr class="thead">
                                    <th>Nº</th>
                                    <th>Tipo de entrada/Zona</th>
                                </tr>
                            </thsead>
                            <tbody contenteditable="true"></tbody>
                        </table>
                    </div>
                </div>
            </div>
            <!--QUINTA PESTAÑA no existe, asientos tiene su propia vista-->
            <!--SEXTA PESTAÑA-->
            <div class="tab-pane fade in container" id="extras">
                <div class="container">
                    <br>
                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(c => c.ExtrasModel.MaxReservas, new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.TextBoxFor(c => c.ExtrasModel.MaxReservas, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(c => c.ExtrasModel.PuntosToCliente, new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.TextBoxFor(c => c.ExtrasModel.PuntosToCliente, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(c => c.ExtrasModel.Ganancia, new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                <div class="input-group">
                                    @Html.TextBoxFor(c => c.ExtrasModel.PuntosToCliente, new { @class = "form-control" })
                                    <span class="input-group-addon" id="ganancia">%</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(c => c.ExtrasModel.MontFijoVentEnt, new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                <div class="input-group">
                                    <span class="input-group-addon" id="cancelar">S/.</span>
                                    @Html.TextBoxFor(c => c.ExtrasModel.MontFijoVentEnt, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(c => c.ExtrasModel.PenCancelacion, new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                <div class="input-group">
                                    <span class="input-group-addon" id="cancelar">S/.</span>
                                    @Html.TextBoxFor(c => c.ExtrasModel.PenCancelacion, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(c => c.ExtrasModel.PenPostergacion, new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                <div class="input-group">
                                    <span class="input-group-addon" id="postergar">S/.</span>
                                    @Html.TextBoxFor(c => c.ExtrasModel.PenPostergacion, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(m => m.ExtrasModel.ImageEvento)
                            <div class="col-md-6">
                                @Html.TextBoxFor(m => m.ExtrasModel.ImageEvento, new { type = "file", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ExtrasModel.ImageEvento)
                            </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(m => m.ExtrasModel.ImageDestacado)
                            <div class="col-md-6">
                                @Html.TextBoxFor(m => m.ExtrasModel.ImageDestacado, new { type = "file", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ExtrasModel.ImageDestacado)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(m => m.ExtrasModel.ImageSitios)
                            <div class="col-md-6">
                                @Html.TextBoxFor(m => m.ExtrasModel.ImageSitios, new { type = "file", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ExtrasModel.ImageSitios)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4 col-md-offset-2">
                            <div class="checkbox">
                                @Html.LabelFor(c => c.ExtrasModel.PermitirReservasWeb)
                                @Html.CheckBoxFor(c => c.ExtrasModel.PermitirReservasWeb)
                                @*<label><input type="checkbox" value="">Permitir reservas vía web</label>*@
                            </div>
                            <div class="checkbox">
                                @Html.LabelFor(c => c.ExtrasModel.PermitirBoletoElectronico)
                                @Html.CheckBoxFor(c => c.ExtrasModel.PermitirBoletoElectronico)
                                @*<label><input type="checkbox" value="">Permitir boleto electrónico</label>*@
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-2 col-md-offset-5">
                            <button type="submit" class="btn btn-primary">Registrar Evento</button><br /><br />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>

    <!--ventana de buscar local-->
    <div class="modal fade" id="modalBuscarLocal">
        <div class="modal-dialog">
            <div class="modal-content">
                <!--ACA VA EL CONTENIDO DEL MODAL-->
                <!--contenido de la ventana-->
                <div class="modal-body">
                    <form action="" class="form-horizontal">
                        <div class="form-group">
                            @{
                                List<Local> localList = db.Local.ToList();
                            }
                            Seleccione un Local:
                            <table class="table table-bordered table-hover" id="tablita">
                                <thsead>
                                    <tr class="thead">
                                        <th>Id</th>
                                        <th>Aforo</th>
                                        <th>Ubicacion</th>
                                        <th>Seleccionar</th>
                                    </tr>
                                </thsead>
                                <tbody>
                                    @foreach (var local in localList)
                                    {
                                        <tr>
                                            <td>@local.codLocal</td>
                                            <td>@local.aforo</td>
                                            <td>@local.ubicacion</td>
                                            <td><input type="radio" name="groupL" value="@local.ubicacion"></td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </form>
                </div>
                <!--footer de la ventana-->
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" onclick="llenaLocal()"><span class="glyphicon glyphicon-ok"></span> Seleccionar</button>
                </div>
            </div>
        </div>
    </div>

    <!--ventana de buscar organizador-->
    <div class="modal fade" id="modalBuscarOrganizador">
        <div class="modal-dialog">
            <div class="modal-content">
                <!--ACA VA EL CONTENIDO DEL MODAL-->
                <!--contenido de la ventana-->
                <div class="modal-body">
                    <form action="" class="form-horizontal">
                        <div class="form-group">
                            @{
                                List<Organizador> orgList = db.Organizador.Where(c => c.estadoOrg == "Activo").ToList();
                            }
                            <table class="table table-bordered table-hover" id="tablita">
                                <thsead>
                                    <tr class="thead">
                                        <th>Id</th>
                                        <th>Nombre</th>
                                        <th>Seleccionar</th>
                                    </tr>
                                </thsead>
                                <tbody>
                                    @foreach (var org in orgList)
                                    {
                                        <tr>
                                            <td>@org.codOrg</td>
                                            <td>@org.nombOrg</td>
                                            <td><input type="radio" name="groupO" value="@org.nombOrg"></td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </form>
                </div>
                <!--footer de la ventana-->
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" onclick="llenaOrg()"><span class="glyphicon glyphicon-ok"></span> Seleccionar</button>
                </div>
            </div>
        </div>
    </div>
    <script>
        function cambioDepartamento() {
            var depId = parseInt($("#idRegion").val());
            if (!isNaN(depId)) {
                var ddProv = $("#idProv");
                ddProv.empty();
                ddProv.append($("<option></option>").val("").html("Provincia"));
                $.ajax({
                    url: "@Url.Action("Provincia","Services")",
                    data: { depId: depId },
                    datatype: "json",
                    success: function (data) {
                        var obj = $.parseJSON(data);
                        $.each(obj, function (k, v) {
                            ddProv.append($("<option></option>").val(v.IdRegion).html(v.Nombre));
                        });
                    },
                    error: function () {
                        alert("Error :(");
                    }
                });
            }
            ddProv.empty();
        }
        function cambioCategoria() {
            var catId = parseInt($("#idCategoria").val());
            if (!isNaN(catId)) {
                var ddProv = $("#idSubCat");
                ddProv.empty();
                ddProv.append($("<option></option>").val("").html("Subcategoria"));
                $.ajax({
                    url: "@Url.Action("Subcategoria","Services")",
                    data: { catId: catId },
                    datatype: "json",
                    success: function (data) {
                        var obj = $.parseJSON(data);
                        $.each(obj, function (k, v) {
                            ddProv.append($("<option></option>").val(v.IdSCategoria).html(v.Nombre));
                        });
                    },
                    error: function () {
                        alert("Error :(");
                    }
                });
            }
        }
        function llenaOrg() {
            var nomb = $('input[name="groupO"]:checked').val();
            $("#organizadorNombre").val(nomb);
            $('#modalBuscarOrganizador').modal('hide');
        }
        function llenaLocal() {
            var nomb = $('input[name="groupL"]:checked').val();
            $("#localNombre").val(nomb);
            $('#modalBuscarLocal').modal('hide');
        }
        function agregarFila() {
            var tabla = document.getElementById("tarifaTabla");
            var row = tabla.insertRow();
            row.insertCell(0);
            row.insertCell(1);
        }
        function nuevoBloque() {
            var table = document.getElementById("bloqueDeTiempo");
            var row = table.insertRow();
            row.id = $("#histBloque").val();
            var cell1 = row.insertCell(0);//desde
            cell1.innerHTML = '<input type="date" class="form-control" >';
            var cell2 = row.insertCell(1);//hasta
            cell2.innerHTML = '<input type="date" class="form-control" >';
            var cell3 = row.insertCell(2);
            cell3.align = "center";
            cell3.innerHTML = '<input type="radio" name="groupBloquedeVenta" value="' + (parseInt(row.id)) + '">';
            $("#histBloque").val(parseInt(row.id) + 1);
        }
        function quitarBloque() {
            var fila = $('input[name="groupBloquedeVenta"]:checked').val();
            var row = document.getElementById(parseInt(fila));
            row.parentNode.removeChild(row);
        }

        function generaTablaTarifas() {
            var table = document.getElementById("bloqueDeTiempo");
            var tamBloque = parseInt(table.rows.length);
            var tblHead = document.getElementById("tarifaTabla").tHead;
            for (var i = 1; i < tamBloque; i++) {
                var row = table.rows[i];
                var name = "Del " + $('input', row.cells[0]).val() + " hasta " + $('input', row.cells[1]).val();
                var tieneColumna = $('#tarifaTabla thead th').filter(function () {
                    return this.textContent === name;
                }).length > 0;
                if (!tieneColumna) {
                    $('#tarifaTabla thead').append('<th>' + name + '</th>');
                }
            }
        }
        function agregaFuncion() {
            var cantFuncion = parseInt($("#histFuncion").val());
            $('<div id="funcion_' + (cantFuncion + 1) + '" class="row" ><div class="col-md-1 col-md-offset-1"><label for="">Fecha:</label></div><div class="col-md-2"><input class="form-control" type="date"></div><div class="col-md-1 col-md-offset-1"><label for="">Hora:</label></div><div class="col-md-2"><input class="form-control" type="time"></div><div class="col-md-1"><input type="radio" name="groupFunciones" value="' + (cantFuncion + 1) + '"></div></div><br>').appendTo("#funciones");
            $("#histFuncion").val(cantFuncion + 1);
        }
        function eliminarFuncion() {
            var fila = $('input[name="groupFunciones"]:checked').val();
            $("#funcion_" + fila).remove();
        }
    </script>
</div>
