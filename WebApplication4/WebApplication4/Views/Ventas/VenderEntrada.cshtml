@using WebApplication4.Models
@using WebApplication4.Controllers
@model VenderEntradaModel
@{
    ViewBag.Title = "Vender Entrada";
    Layout = "~/Views/Shared/_Layout.cshtml";
    inf245netsoft db = new inf245netsoft();
    List<Promociones> promocionesLista = ViewBag.Promociones as List<Promociones>;
    List<Promociones> promocionesListaEf = ViewBag.PromocionesEfectivo as List<Promociones>;
    double? importe = ViewBag.Total as double?;
    double? descuento = ViewBag.Descuento as double?;
    double? descuentoE = ViewBag.DescuentoE as double?;
    double? montopagar = ViewBag.Pagar as double?;
    List<CarritoItem> carrito = new List<CarritoItem>();
    if (Session["CarritoItemVentas"] != null)
    {
        promocionesLista = ViewBag.Promociones as List<Promociones>;
        carrito = Session["CarritoItemVentas"] as List<CarritoItem>;
    }
    //tipo de cambio
    TipoDeCambio tipoCambio = db.TipoDeCambio.Where(c => c.estado == "Activo").ToList().Last();
    double cambio = tipoCambio.valor.Value / (MagicHelpers.ConstanteTipoCambio * 1.0);
    //funciones
    List<int> idFunciones = ViewBag.Funciones as List<int>;
}

<div class="container-fluid">
    <div class="col-md-5">
        <ol class="breadcrumb">
            <li><a href="@Url.Action("Index2", "Home")">Inicio</a></li>
            <li class="active">Pagar Entrada</li>
        </ol>
    </div>
</div>

@{
    for (int i = 0; i < idFunciones.Count; i++)
    {
        @Html.Hidden("idFunciones", "" + idFunciones[i])
    }
}
<div class="container " id="promocionesLista">
    <div id="listaEventoPromocionEfectivo" class="col-md-4">
        <p>Descuentos disponibles para pago solo en efectivo, no aplicable para pago mixto:</p>
        @{
            for (int i = 0; i < promocionesListaEf.Count; i++)
            {
                string razon = "";
                if (promocionesListaEf[i].codPromo == -1)
                {
                    razon = "- No cuenta con promocion";
                }
                else
                {
                    double desc = (1 - (promocionesListaEf[i].cantComp.Value * 1.0 / promocionesListaEf[i].cantAdq.Value)) * 100;
                    razon = "- Descuento de " + String.Format("{0:0.00}", desc) + "%.";
                }
                @Html.Hidden("promoEfectivo", "" + promocionesListaEf[i].codPromo)
                @Html.Hidden("eventoEfectivo", "" + promocionesListaEf[i].codEvento)
                <p style="margin-left:2em">@razon</p>
            }
        }
    </div>
    @Html.Hidden("dsctInicial", "" + @descuento)
    <div class="col-md-4">
        <p>Descuentos disponibles en pago por tarjeta, no aplicable para pago mixto:</p>
        <div id="listaEventoPromocion">
            @{
                for (int i = 0; i < promocionesLista.Count; i++)
                {
                    string razon = "";
                    if (promocionesLista[i].codPromo == -1)
                    {
                        razon = "- No cuenta con promocion";
                    }
                    else
                    {
                        razon = "- Descuento de " + promocionesLista[i].descuento + "%.";
                    }
                    @Html.Hidden("eventosCarrito", "" + carrito[i].idEvento)
                    @Html.Hidden("promocionesCarrito", "" + promocionesLista[i].codPromo)
                    @Html.Hidden("subtotalCarrito", "" + carrito[i].precio)
                    <p style="margin-left:2em">@razon</p>
                }
            }
        </div>
    </div>
</div>
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h3>Información de la tarjeta</h3><br />
            <div class="container row form-group">
                <div>
                    @Html.Label("lblReg", "¿Es usuario registrado?")
                    @Html.CheckBox("registrado", new { @onchange = "cambio()" })
                </div>
                <div class="col-md-12 form-inline">
                    <div class="col-md-4">
                        <div class="col-md-3">
                            <label for="dni" class="control-label">Tipo Doc:</label>
                        </div>
                        <div class="form-group col-md-1">
                            <select class="form-control" id="comboBusq" disabled>
                                <option value="0">Ambos</option>
                                <option value="1">DNI</option>
                                <option value="2">Pasaporte</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-7">
                        <div class="col-md-3">
                            <label for="dni" class="control-label">N° Documento:</label>
                        </div>
                        <div class="input-group col-md-3">
                            <input id="idBusq" type="text" class="form-control" readonly="readonly">
                            <span class="input-group-btn"><button id="btnBusqueda" onclick="busca()" class="btn btn-primary" type="button" disabled><span class="glyphicon glyphicon-search"></span></button></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @using (Html.BeginForm("VenderEntrada", "Ventas", FormMethod.Post, new { @id = "formPost" }))
        {
            <div class="cold-md-12">
                <div class="row form-group">
                    @Html.LabelFor(c => c.Nombre, new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.TextBoxFor(c => c.Nombre, new { @class = "form-control" })
                        @Html.ValidationMessageFor(c => c.Nombre)
                    </div>
                </div>
                <div class="row form-group">
                    @Html.LabelFor(c => c.Dni, new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.TextBoxFor(c => c.Dni, new { @class = "form-control" })
                        @Html.ValidationMessageFor(c => c.Dni)
                    </div>
                </div>
                <div class="row form-group">
                    @Html.LabelFor(c => c.idBanco, new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.DropDownListFor(c => c.idBanco, ViewBag.Bancos as SelectList, new { @disabled = "disabled", @class = "form-control", @onchange = "calculaPromo()" })
                        @Html.ValidationMessageFor(c => c.idBanco)
                    </div>
                    @Html.HiddenFor(c => c.idBanco)
                </div>

                <div class="row form-group">
                    @Html.LabelFor(c => c.idTipoTarjeta, new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.DropDownListFor(c => c.idTipoTarjeta, ViewBag.TipoTarjeta as SelectList, new { @disabled = "disabled", @class = "form-control", @onchange = "calculaPromo()" })
                    </div>
                    @Html.HiddenFor(c => c.idTipoTarjeta)
                </div>

                <div class="row form-group">
                    @Html.LabelFor(c => c.NumeroTarjeta, new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.TextBoxFor(c => c.NumeroTarjeta, new { @readonly = "readonly", @class = "form-control" })
                        @Html.ValidationMessageFor(c => c.NumeroTarjeta)
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(c => c.CodCcv, new { @class = "control-label col-md-2" })
                    <div class="col-md-1">
                        @Html.TextBoxFor(c => c.CodCcv, new { @readonly = "readonly", @class = "form-control" })
                        @Html.ValidationMessageFor(c => c.NumeroTarjeta)
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(c => c.Mes, new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.DropDownListFor(c => c.Mes, ViewBag.Mes as List<SelectListItem>, new { @disabled = "disabled", @class = "form-control" })
                        @Html.HiddenFor(c => c.Mes)
                        @Html.ValidationMessageFor(c => c.Mes)
                    </div>
                    @Html.LabelFor(c => c.AnioVen, new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.DropDownListFor(c => c.AnioVen, ViewBag.AnVen as List<SelectListItem>, new { @disabled = "disabled", @class = "form-control" })
                        @Html.HiddenFor(c => c.AnioVen)
                        @Html.ValidationMessageFor(c => c.AnioVen)
                    </div>
                </div>

                <h3>Información de montos</h3><br>
                <div>
                    <div class="row form-group">
                        @Html.Label("Tipo de Cambio:", new { @class = "control-label col-md-2" })
                        <div class="col-md-3">
                            @Html.TextBox("tipoCambioMoneda", "" + @cambio, new { @class = "form-control", @readonly = "readonly", @type = "number" })
                        </div>
                    </div>
                    <div class="row form-group">
                        @Html.LabelFor(c => c.Importe, new { @class = "control-label col-md-2" })
                        <div class="col-md-3">
                            @Html.TextBoxFor(c => c.Importe, new { @class = "form-control", @Value = importe, @readonly = "readonly", @type = "number" })
                        </div>
                    </div>
                </div>
                <h3>Método de Pago</h3><br />
                <div class="row">
                    <div id="efectivo" class="col-md-4">
                        <div>                            
                            <label>Efectivo:</label>
                            <input type="radio" name="TipoPago" value="1" onclick="cambioPago()" checked="checked">
                        </div><br />
                        <div class="row form-group">
                            @Html.LabelFor(c => c.Descuento, new { @class = "control-label col-md-3" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(c => c.Descuento, new { @class = "form-control", @Value = String.Format("{0:0.00}", ViewBag.DescuentoE), @readonly = "readonly", @type = "number" })
                            </div>
                        </div>
                        <div class="row form-group">
                            @Html.LabelFor(c => c.MontoPagar, new { @class = "control-label col-md-3" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(c => c.MontoPagar, new { @class = "form-control", @Value = String.Format("{0:0.00}", ViewBag.MontoPagarE), @readonly = "readonly", @type = "number" })
                            </div>
                        </div>
                        <div class="row form-group">
                            @Html.LabelFor(c => c.MontoEfe, new { @class = "control-label col-md-3" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(c => c.MontoEfe, new { @class = "form-control", @onchange = "llena1()", @Value = ViewBag.MontoSE, @type = "number" })
                            </div>
                        </div>
                        <div class="row form-group">
                            @Html.LabelFor(c => c.MontoDolares, new { @class = "control-label col-md-3" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(c => c.MontoDolares, new { @class = "form-control", @onchange = "llena1()", @Value = ViewBag.MontoDE, @type = "number" })
                            </div>
                        </div>
                        <div class="row form-group">
                            @Html.LabelFor(c => c.MontoTar, new { @class = "control-label col-md-3" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(c => c.MontoTar, new { @class = "form-control", @readonly = "readonly", @Value = "0", @type = "number" })
                            </div>
                        </div>
                        <div class="row form-group">
                            @Html.LabelFor(c => c.Vuelto, new { @class = "control-label col-md-3" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(c => c.Vuelto, new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.VueltoE, @type = "number" })
                            </div>
                        </div>
                    </div>
                    <div id="tarjeta" class="col-md-4">                        
                        <div>
                            <label>Tarjeta:</label>
                            <input type="radio" name="TipoPago" value="2" onclick="cambioPago()">
                        </div><br />
                        <div class="row form-group">
                            @Html.LabelFor(c => c.Descuento, new { @class = "control-label col-md-3" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(c => c.Descuento, new { @class = "form-control", @Value = ViewBag.Descuento, @disabled = "disabled", @type = "number" })
                            </div>
                        </div>
                        <div class="row form-group">
                            @Html.LabelFor(c => c.MontoPagar, new { @class = "control-label col-md-3" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(c => c.MontoPagar, new { @class = "form-control", @Value = ViewBag.MontoPagarT, @disabled = "disabled", @type = "number" })
                            </div>
                        </div>
                        <div class="row form-group">
                            @Html.LabelFor(c => c.MontoEfe, new { @class = "control-label col-md-3" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(c => c.MontoEfe, new { @class = "form-control", @Value = "0", @disabled = "disabled", @type = "number" })
                            </div>
                        </div>
                        <div class="row form-group">
                            @Html.LabelFor(c => c.MontoDolares, new { @class = "control-label col-md-3" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(c => c.MontoDolares, new { @class = "form-control", @Value = "0", @disabled = "disabled", @type = "number" })
                            </div>
                        </div>
                        <div class="row form-group">
                            @Html.LabelFor(c => c.MontoTar, new { @class = "control-label col-md-3" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(c => c.MontoTar, new { @class = "form-control", @Value = ViewBag.MontoTarjeta, @disabled = "disabled", @type = "number" })
                            </div>
                        </div>
                        <div class="row form-group">
                            @Html.LabelFor(c => c.Vuelto, new { @class = "control-label col-md-3" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(c => c.Vuelto, new { @class = "form-control", @disabled = "disabled", @Value = "0", @type = "number" })
                            </div>
                        </div>
                    </div>
                    <div id="mixto" class="col-md-4">
                        <div>
                            <label>Mixto:</label>
                            <input type="radio" name="TipoPago" value="3" onclick="cambioPago()">
                        </div><br />
                        <div class="row form-group">
                            @Html.LabelFor(c => c.Descuento, new { @class = "control-label col-md-3" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(c => c.Descuento, new { @class = "form-control", @Value = "0", @disabled = "disabled", @type = "number" })
                            </div>
                        </div>
                        <div class="row form-group">
                            @Html.LabelFor(c => c.MontoPagar, new { @class = "control-label col-md-3" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(c => c.MontoPagar, new { @class = "form-control", @Value = ViewBag.MontoPagarM, @disabled = "disabled", @type = "number" })
                            </div>
                        </div>
                        <div class="row form-group">
                            @Html.LabelFor(c => c.MontoEfe, new { @class = "control-label col-md-3" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(c => c.MontoEfe, new { @class = "form-control", @onchange = "llena3()", @Value = ViewBag.MontoSM, @disabled = "disabled", @type = "number" })
                            </div>
                        </div>
                        <div class="row form-group">
                            @Html.LabelFor(c => c.MontoDolares, new { @class = "control-label col-md-3" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(c => c.MontoDolares, new { @class = "form-control", @onchange = "llena3()", @Value = ViewBag.MontoDM, @disabled = "disabled", @type = "number" })
                            </div>
                        </div>
                        <div class="row form-group">
                            @Html.LabelFor(c => c.MontoTar, new { @class = "control-label col-md-3" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(c => c.MontoTar, new { @class = "form-control", @disabled = "disabled", @Value = ViewBag.MontoTarjetaM, @type = "number" })
                            </div>
                        </div>
                        <div class="row form-group">
                            @Html.LabelFor(c => c.Vuelto, new { @class = "control-label col-md-3" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(c => c.Vuelto, new { @class = "form-control", @disabled = "disabled", @Value = ViewBag.VueltoM, @type = "number" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 col-sm-6 col-xs-6">
                        <input type="submit" value="Finalizar Venta" onclick="return llenaArreglo()" class="btn btn-default btn-primary" />
                    </div>
                </div>
            </div>
        }
    </div>
    <script type="text/javascript" src="@Url.Content("/Scripts/Ventas/VenderEntradaHelper.js")"></script>
</div>
<br />
