
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutPersonal.cshtml";
}

@using Microsoft.AspNet.Identity
@using WebApplication4.Models

@{
    var db = new WebApplication4.Models.inf245netsoft();
    Local local = (Local)Session["local"];
    LocalEditModel localM = new LocalEditModel();
    localM.aforo = (int)local.aforo;
    localM.idRegion = (int)local.idRegion;
    localM.descripcion = local.descripcion;
    localM.idProv = (int)local.idProvincia;
    localM.ubicacion = local.ubicacion;
}

@model LocalEditModel
@using (Html.BeginForm("EditRegister", "Local", FormMethod.Post, new {model=localM }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true)
        <br>
        <div class="row form-group">
            @Html.LabelFor(model => model.aforo, new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.TextBoxFor(model => model.aforo, new { @placeholder = @localM.aforo, @Value = @localM.aforo })
                @Html.ValidationMessageFor(model => model.aforo)
            </div>
        </div>

        <div class="row form-group">
            @Html.LabelFor(model => model.descripcion, new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.TextAreaFor(model => model.descripcion, new { @placeholder = @localM.descripcion, @Value = @localM.descripcion })
                @*@Html.ValidationMessageFor(model => model.descripcion)*@
            </div>
        </div>
        <br>
        <div class="row form-group">
            @Html.LabelFor(model => model.ubicacion, new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.TextBoxFor(model => model.ubicacion, new { @placeholder = @localM.ubicacion, @Value = @localM.ubicacion })
                @*@Html.ValidationMessageFor(model => model.ubicacion)*@
            </div>
        </div>

        <div class="row form-group">
            @Html.LabelFor(model => model.idRegion, new { @class = "control-label col-md-3" })
            <div class="col-md-2">
                @Html.DropDownListFor(model => model.idRegion, @ViewBag.DepID as SelectList, "Departamento", new { @class = "form-control", @onchange = "cambioDepartamento()" })
            </div>
        </div>

        <div class="row form-group">
            @Html.LabelFor(model => model.idProv, new { @class = "control-label col-md-3" })
            <div class="col-md-2">
                @Html.DropDownListFor(model => model.idProv, @ViewBag.ProvID as SelectList, "Provincia", new { @class = "form-control" })
            </div>
        </div>
               

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Editar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script>
    function cambioDepartamento() {
        var depId = parseInt($("#idRegion").val());
        if (!isNaN(depId)) {
            var ddProv = $("#idProv");
            ddProv.empty();
            ddProv.append($("<option></option>").val("").html("Provincia"));
            $.ajax({
                url: "@Url.Action("Provincia","Services")",
                data: { depId: depId },
            datatype: "json",
            success: function (data) {
                var obj = $.parseJSON(data);
                $.each(obj, function (k, v) {
                    ddProv.append($("<option></option>").val(v.IdRegion).html(v.Nombre));
                });
            },
            error: function () {
                alert("Error :(");
            }
        });
    }
    ddProv.empty();
    }
</script>