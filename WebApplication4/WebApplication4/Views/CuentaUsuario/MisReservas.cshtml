@using Microsoft.AspNet.Identity;
@using WebApplication4.Models;

@{
    ViewBag.Title = "MisReservas";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var db = new WebApplication4.Models.inf245netsoft();
    CuentaUsuario cu = null;
    //se obtiene la cuenta del usuario logueado
    //cu = (CuentaUsuario)Session["UsuarioLogueado"];
    cu = db.CuentaUsuario.Find(User.Identity.Name);
    DateTime hoy = DateTime.Now;
    List<Ventas> listaventas = null;
    List<VentasXFuncion> listvxf = new List<VentasXFuncion>();
    if (cu != null)
    {
        //se obitienen las ventas en estado reservado del usuario logueado si se ha logueado la cuenta
        listaventas = db.Ventas.Where(r => r.Estado == "Reservado" && r.cliente == cu.usuario).ToList();
        for (int i = 0; i < listaventas.Count; i++)
        {
            Ventas vent = listaventas[i];
            //se obtienen las ventas x funcion asociadas a las reservas obtenidas
            List<VentasXFuncion> lv = db.VentasXFuncion.Where(c => c.codVen == vent.codVen).ToList();
            for (int j = 0; j < lv.Count; j++)
            {
                listvxf.Add(lv[j]);
            }
        }
    }

}
<style>
    
</style>
<div class="container-fluid">
    <div class="col-md-5">
        <ol class="breadcrumb">
            <li><a href="@Url.Action("Index","Home")">Inicio</a></li>
            <li><a href="@Url.Action("MiCuenta", "CuentaUsuario")">Mi cuenta</a></li>
            <li class="active">Mis reservas vigentes</li>
        </ol>
    </div>    
</div>

<div class="container">
    <div class="row">
        <!--LA PARTE IMPORTANTE-->
        <div class="col-md-8">            
            <div class="row form-group">                                
                <div class="col-md-12">
                    <a onclick="redirigeReserva()" class="btn btn-success pull-right"><span class="fa fa-credit-card"></span> Pagar reserva</a>
                </div>
            </div>
            @*se muestran la lista de las reservas obtenidas del usuario logueado*@
            <div class="row form-group">
                <div class="col-md-12 table-responsive">
                    <table id="mytable" class="table table-bordered table-hover">
                        <thead>
                            <tr>
                                <th class="col-md-1">Código</th>
                                <th class="col-md-2">Evento</th>
                                <th class="col-md-1">Fecha</th>
                                <th class="col-md-1">Hora</th>
                                <th class="col-md-1">Cantidad</th>
                                <th class="col-md-2">Zona/Tarifa</th>
                                <th class="col-md-2">Asiento</th>
                                <th class="col-md-1">Monto (S/.)</th>
                                <th class="col-md-1" style="text-align:center"><span class="fa fa-trash"></span></th>
                            </tr>
                        </thead>
                        <tbody id="tbody">
                            @if (listaventas != null)
                            {
                                if (listvxf != null)
                                {
                                    //se muestran las ventas si existen y si existe su ventaxfuncion correpondiente
                                    foreach (var row in listvxf)
                                    {
                                        <tr id=@row.codVen onclick='myFunction(this)'>
                                            <td>@row.codVen</td>
                                            @*se obtiene la funcion del la venta x funcion*@
                                            @{
                                        Funcion fu = db.Funcion.Find(row.codFuncion);
                                            }
                                            <td><a href=@Url.Action("VerEvento", "Evento", new { id = @db.Eventos.Find(fu.codEvento).codigo })>@db.Eventos.Find(fu.codEvento).nombre</a></td>
                                            <td>@fu.fecha.Value.ToString("dd/MM/yyyy")</td>
                                            <td>@String.Format("{0:t}", fu.horaIni)</td>
                                            <td>@row.cantEntradas</td>
                                            @{
                                        //se obtiene la listade detalles de venta asociada a la venta x funcion
                                        List<DetalleVenta> ld = db.DetalleVenta.Where(c => c.codFuncion == fu.codFuncion && c.codVen == row.codVen).ToList();
                                        DetalleVenta de = null;
                                        PrecioEvento pe = null;
                                        List<AsientosXFuncion> laf = null;
                                        AsientosXFuncion af = null;
                                        ZonaEvento zon = null;
                                        string asientos = "";
                                        //se obtiene el detalle de la lista de detalles y el precio de ese detalle
                                        if (ld != null && ld.Count != 0)
                                        {
                                            de = ld.First();
                                            pe = db.PrecioEvento.Find(de.codPrecE);
                                        }
                                        //si se obtiene el precio asociada al detalle, se obtiene los asientos x funcion asociada al detalle y a la funcion
                                        if (pe != null)
                                        {
                                            laf = db.AsientosXFuncion.Where(c => c.codFuncion == de.codFuncion && c.codDetalleVenta == de.codDetalleVenta).ToList();
                                        }
                                        if (laf != null && laf.Count != 0)
                                        {
                                            //si existe los asientos se prueba obteniendo el primero
                                            af = laf.First();
                                            for (int j = 0; j < laf.Count; j++)
                                            {
                                                //se obtiene la lista de asientos para los asientos X Funcion
                                                if (j == 0)
                                                {
                                                    asientos = "" + db.Asientos.Find(laf[j].codAsiento).fila + "-" + db.Asientos.Find(laf[j].codAsiento).columna;
                                                }
                                                else
                                                {
                                                    asientos = asientos + ", " + db.Asientos.Find(laf[j].codAsiento).fila + "-" + db.Asientos.Find(laf[j].codAsiento).columna;
                                                }
                                            }
                                        }
                                            }
                                            @if (de != null)
                                            {
                                                //si detalle existe se obtiene la zona asociada a ese detalle
                                                zon = db.ZonaEvento.Find(pe.codZonaEvento);
                                                <td>@db.ZonaEvento.Find(pe.codZonaEvento).nombre</td>
                                            }
                                            else
                                            {
                                                <td>-</td>
                                            }
                                            @if (af != null)
                                            {
                                                //si existen asientos se muestra la lista de asientos
                                                <td>@asientos</td>
                                            }
                                            else
                                            {
                                                <td>-</td>
                                            }
                                            <td>@row.total</td>
                                            <td><a title="Eliminar reserva" href="@Url.Action("DeleteReserva", "CuentaUsuario", new { codE = row.codVen, codF = row.codFuncion,codEv=fu.codEvento,codZ=zon.codZona })" class="btn btn-danger"><span class="fa fa-trash"></span></a></td>
                                        </tr>
                                    }
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <!--CARRUSEL-->
        <div class="col-md-4">
            destacados
        </div>
    </div>
</div><!--Fin del container-->

<input type="hidden" id="codVenT" value="" />
<script>
    function myFunction(x) {
        if (document.getElementsByClassName("trselected").length > 0) {
            var element = document.getElementsByClassName("trselected");
            element[0].className = "";
        }
        //se almacena el codigo de la reserva seleccionada
        var elem = document.getElementById("codVenT");
        elem.value = x.cells[0].innerHTML;
        x.className = "trselected";
    }
    function redirigeReserva() {
        var reserva = $('#codVenT').val();
        //se pasa a la pantalla de pago de la reserva seleccionada
        if (reserva != "") {
            window.location.href = '/CuentaUsuario/PagarReserva?reserva=' + reserva;
        } else {
            alert("Seleccione una Reserva");
            evento = "";
        }

    }

</script>
