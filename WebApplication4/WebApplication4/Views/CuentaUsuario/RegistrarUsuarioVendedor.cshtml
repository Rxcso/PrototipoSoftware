@using WebApplication4.Models;
@model WebApplication4.Models.RegisterCliVendViewModel

@{
    ViewBag.Title = "Registrar cliente";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .obliga {
        color: #990000;
    }
</style>
<div class="container-fluid">
    <div class="col-md-5">
        <ol class="breadcrumb">            
            <li class="active">Registrar cliente</li>
        </ol>
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                @Html.ValidationSummary(true)                
                <h3>Datos de Ingreso</h3><br>
                <div class="row form-group">
                    @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-3" })
                    <label class="control-label col-md-1 obliga">*</label>
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email)
                    </div>

                </div>                
                
                <h3>Datos Personales</h3>
                <div class="row form-group">
                    @Html.LabelFor(model => model.nombre, new { @class = "control-label col-md-3" })
                    <label class="control-label col-md-1 obliga">*</label>
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.nombre)
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(model => model.apellido, new { @class = "control-label col-md-3" })
                    <label class="control-label col-md-1 obliga">*</label>
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.apellido, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.apellido)
                    </div>
                </div>



                <div class="row form-group">
                    @Html.LabelFor(model => model.tipoDoc, new { @class = "control-label col-md-3" })
                    <label class="control-label col-md-1 obliga">*</label>
                    <div class="col-md-3">
                        @{
    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "DNI",
        Value = "1",
    });
    listItems.Add(new SelectListItem
    {
        Text = "Pasaporte",
        Value = "2"
    });
                        }
                        @Html.DropDownListFor(model => model.tipoDoc, listItems, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.tipoDoc)
                    </div>

                    @Html.LabelFor(model => model.codDoc, new { @class = "control-label col-md-1" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.codDoc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.codDoc)
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(model => model.sexo, new { @class = "control-label col-md-3" })
                    <label class="control-label col-md-1 obliga">*</label>
                    <div class="col-md-7">
                        @{
    List<SelectListItem> listItemsS = new List<SelectListItem>();
    listItemsS.Add(new SelectListItem
    {
        Text = "Masculino",
        Value = "H",
    });
    listItemsS.Add(new SelectListItem
    {
        Text = "Femenino",
        Value = "F"
    });
                        }
                        @Html.DropDownListFor(model => model.sexo, listItemsS, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.sexo)
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(model => model.fechaNac, new { @class = "control-label col-md-3" })
                    <label class="control-label col-md-1 obliga">*</label>
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.fechaNac, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.fechaNac)
                    </div>
                </div>

                <h3>Ubicación</h3><br>

                <div class="row form-group">
                    @Html.LabelFor(model => model.direccion, new { @class = "control-label col-md-3" })
                    <label class="control-label col-md-1 obliga">*</label>
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.direccion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.direccion)
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(model => model.telefono, new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.telefono)
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(model => model.telMovil, new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.telMovil, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.telMovil)
                    </div>
                </div>
                <div class="row form-group">
                    <center>
                        <button type="submit" class="btn btn-primary"><span class="glyphicon glyphicon-pencil"></span> Registrar</button>
                        <a href="@Url.Action("Index2","Home")" class="btn btn-danger"><span class="glyphicon glyphicon-remove"></span> Cancelar</a>
                        <h6 class="obliga">(*) Campos obligatorios</h6>
                    </center>
                </div>
                
            </div>
        </div>
        
    </div>

}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
