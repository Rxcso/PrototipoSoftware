@using WebApplication4.Models
@model ComprarEntradaModel
@{
    ViewBag.Title = "ComprarEntrada";
    Layout = "~/Views/Shared/_Layout.cshtml";
    inf245netsoft db = new inf245netsoft();
    string nombre = "";
    string dni = "";
    if (Request.IsAuthenticated)
    {
        CuentaUsuario user = db.CuentaUsuario.Where(c => c.correo == User.Identity.Name).First();
        nombre = user.nombre + " " + user.apellido;
        dni = user.codDoc;
    }
    List<Promociones> promocionesLista = ViewBag.Promociones as List<Promociones>;
    List<CarritoItem> carrito = Session["CarritoItem"] as List<CarritoItem>;
    double? importe = ViewBag.Total as double?;
    double? descuento = ViewBag.Descuento as double?;
    double? montopagar = ViewBag.Pagar as double?;
}
<div class="container" id="promocionesLista">
    <p>Mejores descuentos para su compra segun los items en su carrito:</p>
    <div id="listaEventoPromocion">
        @{
            for (int i = 0; i < promocionesLista.Count; i++)
            {
                string razon = "";
                if (promocionesLista[i].codPromo == -1)
                {
                    razon = "- No cuenta con promocion";
                }
                else
                {
                    razon = "- Descuento de " + promocionesLista[i].descuento + "%.";
                }
                @Html.Hidden("eventosCarrito", "" + carrito[i].idEvento)
                @Html.Hidden("promocionesCarrito", "" + promocionesLista[i].codPromo)
                <p style="margin-left:2em">@razon</p>
            }
        }
    </div>
</div>
<div class="container">
    <div class="row">
        <div class="col-md-8" id="tarjeta">
            <h3>Información de la tarjeta</h3><br />
            @using (Html.BeginForm("ComprarEntrada", "CuentaUsuario", FormMethod.Post, new { @id = "formPost" }))
            {
                <div class="row form-group">
                    @Html.LabelFor(c => c.Nombre, new { @class = "control-label col-md-3" })
                    <div class="col-md-4">
                        @{//si esque es un usuario registrado
                if (Request.IsAuthenticated)
                {
                    @Html.TextBoxFor(c => c.Nombre, new { @class = "form-control", @readonly = "readonly", @Value = nombre })
                }
                else
                {
                    @Html.TextBoxFor(c => c.Nombre, new { @class = "form-control" })
                            @Html.ValidationMessageFor(c => c.Nombre)
                }
                        }
                    </div>
                </div>
                <div class="row form-group">
                    @Html.LabelFor(c => c.Dni, new { @class = "control-label col-md-3" })
                    <div class="col-md-4">
                        @{//si esque es un usuario regitrado
                if (Request.IsAuthenticated)
                {
                    @Html.TextBoxFor(c => c.Dni, new { @class = "form-control", @readonly = "readonly", @Value = dni })
                }
                else
                {
                    @Html.TextBoxFor(c => c.Dni, new { @class = "form-control" })
                            @Html.ValidationMessageFor(c => c.Dni)
                }
                        }
                    </div>
                </div>
                <div class="row form-group">
                    @Html.LabelFor(c => c.idBanco, new { @class = "control-label col-md-3" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(c => c.idBanco, ViewBag.Bancos as SelectList, new { @class = "form-control", @onchange = "calculaPromo()" })
                        @Html.ValidationMessageFor(c => c.idBanco)
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(c => c.idTipoTarjeta, new { @class = "control-label col-md-3" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(c => c.idTipoTarjeta, ViewBag.TipoTarjeta as SelectList, new { @class = "form-control", @onchange = "calculaPromo()" })
                        @Html.ValidationMessageFor(c => c.idTipoTarjeta)
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(c => c.NumeroTarjeta, new { @class = "control-label col-md-3" })
                    <div class="col-md-4">
                        @Html.TextBoxFor(c => c.NumeroTarjeta, new { @class = "form-control" })
                        @Html.ValidationMessageFor(c => c.NumeroTarjeta)
                    </div>

                </div>

                <div class="row form-group">
                    @Html.LabelFor(c => c.CodCcv, new { @class = "control-label col-md-3" })
                    <div class="col-md-4">
                        @Html.TextBoxFor(c => c.CodCcv, new { @class = "form-control" })
                        @Html.ValidationMessageFor(c => c.CodCcv)
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(c => c.Mes, new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.DropDownListFor(c => c.Mes, ViewBag.Mes as List<SelectListItem>, new { @class = "form-control" })
                    </div>
                    @Html.LabelFor(c => c.AnioVen, new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.DropDownListFor(c => c.AnioVen, ViewBag.AnVen as List<SelectListItem>, new { @class = "form-control" })
                    </div>
                </div>

                <h3>Información de montos</h3><br>
                <div class="row form-group">
                    @Html.LabelFor(c => c.Importe, new { @class = "control-label col-md-3" })
                    <div class="col-md-4">
                        @Html.TextBoxFor(c => c.Importe, new { @class = "form-control", @Value = importe, @readonly = "readonly" })
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(c => c.Descuento, new { @class = "control-label col-md-3" })
                    <div class="col-md-4">
                        @Html.TextBoxFor(c => c.Descuento, new { @class = "form-control", @Value = descuento, @readonly = "readonly" })
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(c => c.MontoPagar, new { @class = "control-label col-md-3" })
                    <div class="col-md-4">
                        @Html.TextBoxFor(c => c.MontoPagar, new { @class = "form-control", @Value = montopagar, @readonly = "readonly" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 col-sm-6 col-xs-6">
                        <input type="submit" value="Finalzar Compra" onclick="llenaArreglo()" class="btn btn-default btn-primary" />
                    </div>
                </div>
            }
        </div>
    </div>
    <br />
    @*<button onclick="llenaArreglo()">Test</button>*@
</div>
<script>
    function calculaPromo() {
        var idBanco = parseInt($('#idBanco').val());
        var tipoTarjeta = parseInt($('#idTipoTarjeta').val());
        var eventosBTV = document.getElementsByName('eventosCarrito');
        //listaEventoPromocion
        //var divPromocionesLista = $('#listaEventoPromocion').empty();
        var arrRazon = [];
        var eventosCarritos = [];
        var promocionCarritos = []
        var descuentoCarritos = []
        for (var i = 0; i < eventosBTV.length ; i++) {
            var codEvento = eventosBTV[i].value;
            eventosCarritos.push(codEvento);
            $.ajax({
                url: '/Services/Descuento/',
                data: { codEvento: codEvento, idBanco: idBanco, tipoTarjeta: tipoTarjeta },
                datatype: "json",
                success: function (data) {
                    var obj = $.parseJSON(data);
                    //si tenemos data, escribimos denuevo el valor
                    var razon = "";
                    if (parseInt(obj.Descuento) == -1) {
                        razon = "- No cuenta con promocion";
                    } else {
                        razon = "- Descuento de " + obj.Descuento + "%.";
                    }
                    arrRazon.push(razon);
                    descuentoCarritos.push(obj.Descuento);
                    promocionCarritos.push(obj.IdPromocion);
                },
                error: function () {
                    alert("Error :(");
                }
            });
        }
        //<input id="eventosCarrito" name="eventosCarrito" type="hidden" value="1095">
        //<input id="promocionesCarrito" name="promocionesCarrito" type="hidden" value="-1">
        //<p style="margin-left:2em">razon</p>

    }

    function llenaArreglo() {
        var nombreLista1 = "idEventos";
        var nombreLista2 = "idPromociones";
        var promocionesBTV = document.getElementsByName('promocionesCarrito');
        var eventosBTV = document.getElementsByName('eventosCarrito');
        for (var i = 0; i < promocionesBTV.length; i++) {
            var idProm = promocionesBTV[i].value;
            $("#formPost").prepend("<input type='hidden' name='" + nombreLista2 + "[" + (i) + "]' value='" + idProm + "'>");
        }
        for (var i = 0; i < eventosBTV.length; i++) {
            var idEvento = eventosBTV[i].value;
            $("#formPost").prepend("<input type='hidden' name='" + nombreLista1 + "[" + (i) + "]' value='" + idEvento + "'>");
        }
        return true;
    }
</script>