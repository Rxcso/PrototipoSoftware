@using Microsoft.AspNet.Identity
@using WebApplication4.Models

@model OrganizadorModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutPersonal.cshtml";
    Organizador org = (Organizador)Session["organizador"];
    OrganizadorModel orgM = new OrganizadorModel();
    orgM.codDoc = org.codDoc;
    orgM.Email = org.correo;
    orgM.nombre = org.nombOrg;
    orgM.telefono = org.telefOrg;
    orgM.tipoDoc = (int)org.tipoDoc;
}

<div class="modal-body">
    @using (Html.BeginForm("EditRegister", "Organizador", FormMethod.Post, new { model = orgM }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true)
            <br>
            <div class="row form-group">
                @Html.LabelFor(model => model.nombre, new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.nombre, new {@class = "form-control", @placeholder = @orgM.nombre, @Value = @orgM.nombre })
                    @Html.ValidationMessageFor(model => model.nombre)
                </div>
            </div>

            <div class="row form-group">
                @Html.LabelFor(model => model.telefono, new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.telefono, new { @class = "form-control", @placeholder = @orgM.telefono, @Value = @orgM.telefono })
                    @Html.ValidationMessageFor(model => model.telefono)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.tipoDoc, new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @{
        List<SelectListItem> listItems = new List<SelectListItem>();
        listItems.Add(new SelectListItem
        {
            Text = "DNI",
            Value = "1",
        });
        listItems.Add(new SelectListItem
        {
            Text = "Pasaporte",
            Value = "2"
        });
                    }
                    @{
        listItems[(int)org.tipoDoc-1].Selected = true;
                    }
                    @Html.DropDownListFor(model => model.tipoDoc, listItems, "Seleccione tipo de documento", new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.codDoc, new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.codDoc, new { @class = "form-control", @placeholder = @orgM.codDoc, @Value = @orgM.codDoc })
                    @Html.ValidationMessageFor(model => model.codDoc)
                </div>
            </div>

            <div class="row form-group">
                @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @placeholder = @orgM.Email, @Value = @orgM.Email })
                    @Html.ValidationMessageFor(model => model.Email)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Editar" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }
</div>